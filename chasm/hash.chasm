# unsigned long
# hash(unsigned char *str)
# {
#     unsigned long hash = 5381;
#     int c;

#     while (c = *str++)
#         hash = ((hash << 5) + hash) + c; /* hash * 33 + c */

#     return hash;
# }

define hash
    pop

    # String pointer
    setvar str
    # String pointer again
    setvar B

    set 5381
    setvar result

    while
        # Current character in string
        getvar B
        memget
        setvar C

        getvar result
        mul 33
        add $C
        setvar result

        # Increment string pointer
        getvar B
        add 1
        setvar B

        getvar C
    end

    # Make sure result hash can fit into a single character

    # If hash is less than 0, make hash positive
    getvar result
    call abs
    setvar result

    # hash %= 1114111
    set 111
    mul 100
    add 41
    mul 100
    add 11
    setreg 0

    getvar result
    inline %
    setvar result

    # Return result hash
    getvar result
    push

    getvar str
    push
end


# fun abs 1
define abs
    # Save pointer
    pop
    setvar ptr

    # If pointer < 0
    inline 0 R0~ $ptr~ {
    if
        # Make pointer positive
        getvar ptr
        sub $ptr
        sub $ptr
        setvar ptr
    end

    # Push result
    getvar ptr
    push
end


'hash'
call hash

pop
println d

'compile_code'
call hash

pop
println d
