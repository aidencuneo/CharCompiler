'push'
setreg A
'pop'
setreg B
'if'
setreg C
'while'
setreg D
'end'
setreg E
'memadd'
setreg F
'memget'
setreg G
'print '
setreg H
'println '
setreg I
'memset'
setreg J
'set '
setreg K
'ch '
setreg L
'add '
setreg M
'sub '
setreg N
'mul '
setreg O
'div '
setreg P
'exit'
setreg Q
'setvar '
setreg R
'setreg '
setreg S
'getvar '
setreg T
'getreg '
setreg U
'define '
setreg V
'call '
setreg W
'ptr '
setreg X

set 34
println d


# fun strcmp 2
define s
    # Save both string pointers to A and B
    pop
    setvar A
    pop
    setvar B

    # Equal? (Starts true)
    set 1
    setvar E

    # Condition for while loop
    getvar A
    memget
    setreg 0

    getvar B
    memget
    and r0

    # Compare string equality
    while
        # If !equal
        getvar A
        memget
        setreg 0

        getvar B
        memget
        sub r0
        if
            # Set unequal
            set 0
            setvar E
        end

        # Condition for while loop + increment both string pointers
        getvar A
        add 1
        setvar A
        memget
        setreg 0

        getvar B
        add 1
        setvar B
        memget
        and r0
    end

    # If either string still has bytes remaining, set unequal
    # r1 m ?
    #     0=E
    # ;
    # r2 m ?
    #     0=E
    # ;

    # $E
end

getreg V
println s
